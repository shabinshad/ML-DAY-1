# -*- coding: utf-8 -*-
"""summarize.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JClBrF6qrBvyUXp01pmyPTQCJSuMN8hD
"""

from transformers import BartTokenizer, BartForConditionalGeneration

def text_summarization(text):
    """
    Summarize the given text using the BART model.

    Args:
    - text (str): The input text to be summarized.

    Returns:
    - summary (str): The summarized text.
    """
    # Load pre-trained BART tokenizer and model
    tokenizer = BartTokenizer.from_pretrained('facebook/bart-large-cnn')
    model = BartForConditionalGeneration.from_pretrained('facebook/bart-large-cnn')

    # Tokenize input text
    inputs = tokenizer([text], max_length=1024, return_tensors='pt', truncation=True)

    # Generate summary
    summary_ids = model.generate(inputs['input_ids'], num_beams=4, max_length=150, early_stopping=True)

    # Decode and return summary
    summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
    return summary

if __name__ == "__main__":
    # Example text
    input_text = """
    Gensim is an open-source library for unsupervised topic modeling and natural language processing,
    using modern statistical machine learning. Gensim is implemented in Python and Cython.
    Gensim is designed to handle large text collections using data streaming and incremental algorithms,
    which differentiates it from most other machine learning software packages that target only in-memory processing.
    """

    # Summarize the text
    summary = text_summarization(input_text)

    # Print the summary
    print("Original Text:")
    print(input_text)
    print("\nSummary:")
    print(summary)